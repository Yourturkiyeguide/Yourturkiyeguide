// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–º–æ–∂–µ—Ç–µ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ –≤–∞—à—ñ —Ä–µ–∞–ª—å–Ω—ñ —à–ª—è—Ö–∏)
const slides = [
  {
    image: 'assets/img/hello/IMG_2132.jpg',
    title: '–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è 1',
    description: '–ö—Ä–∞—Å–∏–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏—Ä–æ–¥–∏'
  },
  {
    image: 'assets/img/hello/IMG_3639.jpg',
    title: '–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è 2',
    description: '–ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è'
  },
  {
    image: 'assets/img/hello/IMG_6437.jpg',
    title: '–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è 3',
    description: '–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ'
  }
  // –î–æ–¥–∞–π—Ç–µ –≤–∞—à—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç—É—Ç, –∑–∞–º—ñ–Ω–∏–≤—à–∏ URL –Ω–∞ —Ä–µ–∞–ª—å–Ω—ñ —à–ª—è—Ö–∏:
  // {
  //   image: 'assets/img/hello/IMG_3639.jpg',
  //   title: '–ú–æ—î —Ñ–æ—Ç–æ 1',
  //   description: '–û–ø–∏—Å —Ñ–æ—Ç–æ'
  // }
];

let currentIndex = 0;
let isFullscreen = false;
let autoPlayInterval = null;
let isAutoPlaying = false;

function createImageElement(src, alt = '', onLoad = null, onError = null) {
  const img = document.createElement('img');
  img.src = src;
  img.alt = alt;

  if (onLoad) {
    img.onload = onLoad;
  }

  if (onError) {
    img.onerror = onError;
  }

  return img;
}

function showError(message) {
  const errorElement = document.getElementById('errorMessage');
  errorElement.textContent = message;
  errorElement.style.display = 'block';
  setTimeout(() => {
    errorElement.style.display = 'none';
  }, 5000);
}

function createThumbnails() {
  const container = document.getElementById('thumbnailsContainer');
  container.innerHTML = '';

  slides.forEach((slide, index) => {
    const thumbnail = document.createElement('div');
    thumbnail.className = `thumbnail ${index === 0 ? 'active' : ''}`;
    thumbnail.onclick = () => changeSlide(index, thumbnail);

    const img = createImageElement(
      slide.image,
      slide.title || `–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è ${index + 1}`,
      () => {
        // –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è —É—Å–ø—ñ—à–Ω–æ
        thumbnail.querySelector('.thumbnail-placeholder')?.remove();
      },
      () => {
        // –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        const placeholder = document.createElement('div');
        placeholder.className = 'thumbnail-placeholder';
        placeholder.innerHTML = `
          <span>‚ùå</span>
          <span>–ü–æ–º–∏–ª–∫–∞</span>
        `;
        thumbnail.innerHTML = '';
        thumbnail.appendChild(placeholder);
      }
    );

    // –î–æ–¥–∞—î–º–æ placeholder –ø–æ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    const placeholder = document.createElement('div');
    placeholder.className = 'thumbnail-placeholder';
    placeholder.innerHTML = `
      <span>üì∑</span>
      <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</span>
    `;

    thumbnail.appendChild(placeholder);
    thumbnail.appendChild(img);
    container.appendChild(thumbnail);
  });
}

function changeSlide(index, element) {
  if (index < 0 || index >= slides.length) return;

  currentIndex = index;
  const slide = slides[index];
  const mainDisplay = document.getElementById('mainDisplay');
  const mainImageContainer = document.getElementById('mainImageContainer');

  // –û—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç
  mainImageContainer.innerHTML = `
    <span>üì∑</span>
    <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...</span>
  `;

  // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const img = createImageElement(
    slide.image,
    slide.title || `–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è ${index + 1}`,
    () => {
      // –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è —É—Å–ø—ñ—à–Ω–æ
      mainImageContainer.innerHTML = '';
      mainImageContainer.appendChild(img);
    },
    () => {
      // –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      mainImageContainer.innerHTML = `
        <span>‚ùå</span>
        <span>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</span>
        <small style="margin-top: 10px; opacity: 0.7;">${slide.image}</small>
      `;
      showError(`–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: ${slide.title || '–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è ' + (index + 1)}`);
    }
  );

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—ó –º—ñ–Ω—ñ–∞—Ç—é—Ä–∏
  document.querySelectorAll('.thumbnail').forEach(thumb => {
    thumb.classList.remove('active');
  });
  if (element) {
    element.classList.add('active');
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É
  document.getElementById('currentSlide').textContent = index + 1;
  document.getElementById('progressBar').style.width = `${((index + 1) / slides.length) * 100}%`;

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É, —è–∫—â–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ
  if (isFullscreen) {
    updateFullscreenContent();
  }

  // –°–∫—Ä–æ–ª –¥–æ –∞–∫—Ç–∏–≤–Ω–æ—ó –º—ñ–Ω—ñ–∞—Ç—é—Ä–∏ –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö
  if (element) {
    element.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
  }
}

function nextSlide() {
  const nextIndex = (currentIndex + 1) % slides.length;
  const nextThumbnail = document.querySelectorAll('.thumbnail')[nextIndex];
  changeSlide(nextIndex, nextThumbnail);
}

function prevSlide() {
  const prevIndex = (currentIndex - 1 + slides.length) % slides.length;
  const prevThumbnail = document.querySelectorAll('.thumbnail')[prevIndex];
  changeSlide(prevIndex, prevThumbnail);
}

function toggleAutoPlay() {
  if (isAutoPlaying) {
    stopAutoPlay();
  } else {
    startAutoPlay();
  }
}

function startAutoPlay() {
  if (!isAutoPlaying) {
    isAutoPlaying = true;
    autoPlayInterval = setInterval(() => {
      nextSlide();
    }, 3000);
  }
}

function stopAutoPlay() {
  if (isAutoPlaying) {
    isAutoPlaying = false;
    if (autoPlayInterval) {
      clearInterval(autoPlayInterval);
      autoPlayInterval = null;
    }
  }
}

function openFullscreen() {
  const overlay = document.getElementById('fullscreenOverlay');
  isFullscreen = true;

  document.body.style.overflow = 'hidden';
  updateFullscreenContent();
  overlay.classList.add('active');
  stopAutoPlay();
}

function closeFullscreen() {
  const overlay = document.getElementById('fullscreenOverlay');
  isFullscreen = false;
  document.body.style.overflow = '';
  overlay.classList.remove('active');
}

function updateFullscreenContent() {
  const slide = slides[currentIndex];
  const fullscreenMain = document.getElementById('fullscreenMain');

  // –û—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç
  fullscreenMain.innerHTML = `
    <div class="image-placeholder">
      <span>üì∑</span>
      <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...</span>
    </div>
  `;

  // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const img = createImageElement(
    slide.image,
    slide.title || `–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è ${currentIndex + 1}`,
    () => {
      // –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è —É—Å–ø—ñ—à–Ω–æ
      fullscreenMain.innerHTML = '';
      fullscreenMain.appendChild(img);
    },
    () => {
      // –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      fullscreenMain.innerHTML = `
        <div class="image-placeholder">
          <span>‚ùå</span>
          <span>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</span>
        </div>
      `;
    }
  );

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á—ñ–ª—å–Ω–∏–∫–∞
  document.getElementById('fullscreenCurrentSlide').textContent = currentIndex + 1;
  document.getElementById('fullscreenTotalSlides').textContent = slides.length;
}

function navigateFullscreen(direction) {
  if (direction === 1) {
    nextSlide();
  } else {
    prevSlide();
  }
}

function shuffleSlides() {
  const randomIndex = Math.floor(Math.random() * slides.length);
  const randomThumbnail = document.querySelectorAll('.thumbnail')[randomIndex];
  changeSlide(randomIndex, randomThumbnail);
}

function resetGallery() {
  stopAutoPlay();
  const firstThumbnail = document.querySelectorAll('.thumbnail')[0];
  changeSlide(0, firstThumbnail);

  if (isFullscreen) {
    closeFullscreen();
  }
}

// –û–±—Ä–æ–±–∫–∞ —Ç–∞—á-–ø–æ–¥—ñ–π –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
let touchStartX = 0;
let touchStartY = 0;
let touchEndX = 0;
let touchEndY = 0;

function handleTouchStart(e) {
  touchStartX = e.touches[0].clientX;
  touchStartY = e.touches[0].clientY;
}

function handleTouchMove(e) {
  touchEndX = e.touches[0].clientX;
  touchEndY = e.touches[0].clientY;
}

function handleTouchEnd() {
  const deltaX = touchEndX - touchStartX;
  const deltaY = touchEndY - touchStartY;
  const minSwipeDistance = 50;

  if (Math.abs(deltaX) > Math.abs(deltaY)) {
    if (Math.abs(deltaX) > minSwipeDistance) {
      if (deltaX > 0) {
        prevSlide();
      } else {
        nextSlide();
      }
    }
  } else {
    if (Math.abs(deltaY) > minSwipeDistance) {
      if (deltaY > 0) {
        prevSlide();
      } else {
        nextSlide();
      }
    }
  }
}

function showHelp() {
  const helpText = `
–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–Ω—ñ —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è:
‚Ä¢ ‚Üë/‚Üì - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –ø–æ —Å–ª–∞–π–¥–∞—Ö
‚Ä¢ Enter - –ü–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–∏–π —Ä–µ–∂–∏–º
‚Ä¢ Escape - –í–∏—Ö—ñ–¥/–°–∫–∏–¥–∞–Ω–Ω—è
‚Ä¢ Space - –ê–≤—Ç–æ–ø–ª–µ–π
‚Ä¢ R - –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Å–ª–∞–π–¥
‚Ä¢ H - –¶—è –¥–æ–≤—ñ–¥–∫–∞

–ú–∏—à–∞/–î–æ—Ç–∏–∫:
‚Ä¢ –ö–ª—ñ–∫ –ø–æ –º—ñ–Ω—ñ–∞—Ç—é—Ä—ñ - –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ —Å–ª–∞–π–¥—É
‚Ä¢ –ö–ª—ñ–∫ –ø–æ –≥–æ–ª–æ–≤–Ω–æ–º—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—é - –ü–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–∏–π —Ä–µ–∂–∏–º
‚Ä¢ –°–≤–∞–π–ø –≤–ª—ñ–≤–æ/–≤–ø—Ä–∞–≤–æ - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
‚Ä¢ –°–≤–∞–π–ø –≤–≥–æ—Ä—É/–≤–Ω–∏–∑ - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
  `;

  alert(helpText);
}

// –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
document.addEventListener('keydown', (e) => {
  if (isFullscreen) {
    if (e.key === 'Escape') {
      closeFullscreen();
    } else if (e.key === 'ArrowLeft') {
      e.preventDefault();
      prevSlide();
    } else if (e.key === 'ArrowRight') {
      e.preventDefault();
      nextSlide();
    }
  } else {
    if (e.key === 'ArrowUp') {
      e.preventDefault();
      prevSlide();
    } else if (e.key === 'ArrowDown') {
      e.preventDefault();
      nextSlide();
    } else if (e.key === ' ') {
      e.preventDefault();
      toggleAutoPlay();
    } else if (e.key === 'Enter') {
      e.preventDefault();
      openFullscreen();
    } else if (e.key === 'Escape') {
      e.preventDefault();
      resetGallery();
    } else if (e.key.toLowerCase() === 'r') {
      e.preventDefault();
      shuffleSlides();
    } else if (e.key.toLowerCase() === 'h') {
      e.preventDefault();
      showHelp();
    }
  }
});

// –û–±—Ä–æ–±–Ω–∏–∫–∏ —Ç–∞—á-–ø–æ–¥—ñ–π
document.addEventListener('touchstart', handleTouchStart);
document.addEventListener('touchmove', handleTouchMove);
document.addEventListener('touchend', handleTouchEnd);

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–∞–ª–µ—Ä–µ—ó –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–ª–∞–π–¥—ñ–≤
  document.getElementById('totalSlides').textContent = slides.length;
  document.getElementById('fullscreenTotalSlides').textContent = slides.length;

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—ñ–Ω—ñ–∞—Ç—é—Ä
  createThumbnails();

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ —Å–ª–∞–π–¥—É
  const firstThumbnail = document.querySelectorAll('.thumbnail')[0];
  changeSlide(0, firstThumbnail);

  console.log('–ì–∞–ª–µ—Ä–µ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!');
  console.log(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${slides.length} —Å–ª–∞–π–¥—ñ–≤`);
  console.log('–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å H –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏ –ø–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–Ω–∏–º —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è–º');
});

// –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
document.getElementById('fullscreenOverlay').addEventListener('click', (e) => {
  if (e.target === document.getElementById('fullscreenOverlay')) {
    closeFullscreen();
  }
});

// –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—é –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
document.querySelector('.fullscreen-content').addEventListener('click', (e) => {
  e.stopPropagation();
});

// –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
window.galleryAPI = {
  nextSlide,
  prevSlide,
  changeSlide,
  toggleAutoPlay,
  startAutoPlay,
  stopAutoPlay,
  openFullscreen,
  closeFullscreen,
  shuffleSlides,
  resetGallery,
  showHelp,
  getCurrentIndex: () => currentIndex,
  getSlidesCount: () => slides.length,
  isAutoPlaying: () => isAutoPlaying,
  isFullscreenMode: () => isFullscreen
};
